@using System.Text.Json

@model AllWorkoutsModel
@{
    //ViewData["Title"] = "Тренировки и Упражнения";
    ViewData["Title"] = "Тренировки и Упражнения";
    var hasWorkouts = Model.Workouts != null && Model.Workouts.Count > 0;
    WorkoutsModel Workout = null;
    IEnumerable<IGrouping<string, Activity_ExerciseViewModel>> Grouped = null;
    if (hasWorkouts)
    {
        Workout = Model.Workouts[Model.CurrentWorkoutIndex];
        Grouped = Workout.ExercisesOfLatestWorkout
                             .GroupBy(e => e.ExerciseName);
    }

}
<head>
    <script>
        (function () {
            const getCookie = (name) => {
                const value = `; ${document.cookie}`;
                const parts = value.split(`; ${name}=`);
                if (parts.length === 2) return parts.pop().split(';').shift();
            };

            const userTheme = getCookie("theme");
            if (userTheme === "dark") {
                document.documentElement.classList.add("dark-theme");
            } else {
                document.documentElement.classList.remove("dark-theme");
            }
        })();
    </script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link href="~/css/profile.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/MyTrainer.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@@eonasdan/tempus-dominus@6.9.4/dist/css/tempus-dominus.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/profile.css" asp-append-version="true" />
</head>
 
<body>
    <div class="container py-5 pb-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="fw-bold">Тренировки и упражнения</h2>
            <div>
                <a asp-action="StartWorkout" class="btn btn-primary me-2">
                    ➕ Новая тренировка
                </a>
                <button type="button" class="btn btn-outline-primary-custom" data-bs-toggle="modal" data-bs-target="#addExerciseModal">
                    ➕ Новое упражнение
                </button>
               

                <!--
                    добавить автоматическое подсчитывание калорий👍, отдельно добавить список всех упражнений чтобы можно было
                    просто посмотреть на всё, объеденить идентити профиль с самописным, добавить туда возможность получения
                    отчета о показателях пользователя, кнопки редактка/удаления в истории веса, возможно график изменения
                    веса пользователя, сделать адекватный дизайн, мб сделать двухфакторку нормальную, сделать
                    службу поддержки, сделать редактирование данных пользователя, наладить данные при регистрации, сделать
                    на всякий дефолтные значения того или иного, убрать/изменить хедер и футер, разобраться почему иногда
                    не срабатывают кнопки, в инструкции возможно сделать альтернативный способ просмотра видео либо плеер
                    вставить в сайт, чтобы он работал с прокси

                    дропдаун меню упражнения👍, календарик, проверка на нулевость данных, в таблице не выводит калории исправить👍
                -->
                @section Scripts {
                    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

                    @if (TempData["AddedExercise"] != null)
                    {
                        var alertText = JsonSerializer.Serialize(TempData["AddedExercise"]);
                        <script>
                            Swal.fire({
                                icon: 'success',
                                title: 'Уведомление',
                                text: @Html.Raw(alertText)
                                                             });
                        </script>
                    }
                }
                <!-- Модальное окно -->
                <div class="modal fade" id="addExerciseModal" tabindex="-1" aria-labelledby="addExerciseModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <form asp-action="AddExercise" method="post">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="addExerciseModalLabel">Новое упражнение</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Закрыть"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="mb-3">
                                        <label for="name" class="form-label">Название упражнения</label>
                                        <input type="text" class="form-control" id="name" name="name" required />
                                    </div>

                                    <div class="mb-3">
                                        <label for="howToUrl" class="form-label">Ссылка на инструкцию (URL)</label>
                                        <input type="url" class="form-control" id="howToUrl" name="howToUrl" required />
                                    </div>

                                    <div class="mb-3">
                                        <label for="standatdCal" class="form-label">Стандартные калории</label>
                                        <input type="number" class="form-control" id="standatdCal" name="standatdCal" step="0.01" />
                                    </div>

                                    <div class="mb-3">
                                        <label for="description" class="form-label">Описание</label>
                                        <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
                                    </div>

                                    <div class="mb-3">
                                        <label for="targetMuscle" class="form-label">Целевая мышца</label>
                                        <input type="text" class="form-control" id="targetMuscle" name="targetMuscle" required />
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-outline-primary-custom" data-bs-dismiss="modal">Отмена</button>
                                    <button type="submit" class="btn btn-primary">Сохранить</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <h5 class="card-title">Последняя тренировка</h5>
                @if (hasWorkouts && Workout?.LatestWorkout != null)
                {
                    <p class="card-text">
                        <strong>Дата:</strong> @Workout.LatestWorkout.startDateTime.ToString("dd MMMM yyyy HH:mm", new System.Globalization.CultureInfo("ru-RU")) <br />
                        <strong>Длительность:</strong> @(Math.Round((Workout.LatestWorkout.endDateTime - Workout.LatestWorkout.startDateTime).TotalMinutes, 2)) минут <br />
                        <strong>Сожжено калорий:</strong> @Workout.LatestWorkout.totalCal ккал <br />
                        @if (!string.IsNullOrWhiteSpace(Workout.LatestWorkout.coment))
                        {
                            <strong>Комментарий:</strong> @Workout.LatestWorkout.coment
                        }
                    </p>
                }
                else
                {
                    <p class="text-muted">Тренировок пока нет.</p>
                }
            </div>
        </div>
        @if (hasWorkouts)
        {
            <h4 class="mb-3">Упражнения в последней тренировке</h4>
            <div class="table-responsive">
                <div class="d-flex justify-content-evenly mb-4">
                    @if (Model.CurrentWorkoutIndex < Model.Workouts.Count - 1)
                    {
                        <form method="post" asp-action="NextWorkout">
                            <input type="hidden" name="currentIndex" value="@Model.CurrentWorkoutIndex" />
                            <button type="submit" class="btn btn-outline-primary">⬅️ Предыдущая тренировка</button>
                        </form>
                    }
                    else
                    {
                        <form method="post" asp-action="NextWorkout">
                            <input type="hidden" name="currentIndex" value="@Model.CurrentWorkoutIndex" />
                            <button type="submit" class="btn btn-outline-secondary" disabled>⬅️ Предыдущая тренировка</button>
                        </form>
                    }
                    
                    <div class="mb-3">
                        <form asp-action="DateWorkout">
                            <div class="input-group mb-3">
                                <input class="form-control custom-font" type="date" name="data" value="@Workout.LatestWorkout.endDateTime.ToString("yyyy-MM-dd")" />
                                <button type="submit" class="btn btn-primary">Перейти к тренировке в определенном дне</button>
                            </div>
                        </form>
                    </div>
                    @if (Model.CurrentWorkoutIndex > 0)
                    {
                        <form method="post" asp-action="PreviousWorkout">
                            <input type="hidden" name="currentIndex" values="@Model.CurrentWorkoutIndex" />
                            <button type="submit" class="btn btn-outline-primary">➡️ Последняя тренировка тренировка</button>
                        </form>
                    }
                    else
                    {
                        <form method="post" asp-action="PreviousWorkout">
                            <input type="hidden" name="currentIndex" values="@Model.CurrentWorkoutIndex" />
                            <button type="submit" class="btn btn-outline-secondary" disabled>➡️ Последняя тренировка тренировка</button>
                        </form>
                    }

                </div>

                <table class="table-custom table-bordered align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>Упражнение</th>
                            <th>Повторы</th>
                            <th>Вес</th>
                            <th>Сожжено калорий</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var group in Grouped)
                        {
                            var groupId = group.Key.Replace(" ", "").ToLower(); // уникальный ID
                            <tr class="table-primary table-custom toggle-group" data-target="@groupId" style="cursor: pointer;">
                                <td colspan="4"><strong>@group.Key</strong> <span class="float-end">Открыть информацию о подходах ▶️</span></td>
                            </tr>

                            foreach (var ex in group)
                            {
                                <tr class="group-row group-@groupId d-none">
                                    <td>@ex.ExerciseName</td>
                                    <td>@ex.Reps</td>
                                    <td>@ex.WeightUsed кг</td>
                                    <td>@ex.CalBurned ккал</td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <p class="text-muted">Нет упражнений для этой тренировки.</p>
        }
    </div>
    <script src="https://unpkg.com/@@popperjs/core@2/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@eonasdan/tempus-dominus@6.9.4/dist/js/tempus-dominus.umd.min.js"></script>

</body>
<script>
    document.querySelectorAll('.toggle-group').forEach(header => {
        header.addEventListener('click', () => {
            const target = header.getAttribute('data-target');
            const rows = document.querySelectorAll('.group-' + target);
            rows.forEach(row => row.classList.toggle('d-none'));

            const icon = header.querySelector('span');
            icon.textContent = icon.textContent === 'Открыть информацию о подходах ▶️' ? 'Закрыть информацию о подходах 🔽' : 'Открыть информацию о подходах ▶️';
        });
    });

</script>


<style>
    .hover-pointer {
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

        .hover-pointer:hover {
            background-color: #f8f9fa;
        }
</style>